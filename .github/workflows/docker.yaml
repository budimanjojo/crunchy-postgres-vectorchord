---
name: Build and Push Docker Images

on:
  workflow_dispatch: {}
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [released]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-versions.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Get dependency versions
        uses: mikefarah/yq@6251e95af8df3505def48c71f3119836701495d6 # v4.47.2
        id: get-versions
        with:
          cmd: yq eval -o=json -I=0 versions.yaml

  build-and-push:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      # Prevent a failure in one image from stopping the other builds
      fail-fast: false
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        if: ${{ !github.event.pull_request.head.repo.fork }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine version change
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        id: changed-version
        with:
          files: |
            versions.yaml
            Dockerfile

      - name: Determine image push
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        id: should-release
        with:
          script: |
            if (context.eventName == "pull_request") return false;
            if (context.eventName == "workflow_dispatch") return true;
            return "${{ steps.changed-version.outputs.any_changed }}" == "true";

      - name: Set major postgres version
        id: version
        run: |
          pg_major=$(echo ${{ matrix.cdpg }} | cut -d'-' -f2 | cut -d'.' -f1)
          echo "pg_major=$pg_major" >> "$GITHUB_OUTPUT"

      - name: Generate docker image tags
        id: metadata
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          flavor: |
            # Disable latest tag
            latest=false
          images: |
            name=ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ matrix.cdpg }}-${{ matrix.vectorchord }},enable=${{ steps.should-release.outputs.result }}
            type=raw,value=${{ steps.version.outputs.pg_major }}-${{ matrix.vectorchord }},enable=${{ steps.should-release.outputs.result }}
            type=raw,value=${{ matrix.cdpg }},enable=${{ steps.should-release.outputs.result }}
            type=raw,value=${{ steps.version.outputs.pg_major }},enable=${{ steps.should-release.outputs.result }}

      - name: Build and push image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ !github.event.pull_request.head.repo.fork && steps.metadata.outputs.tags != '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            CDPG_TAG=${{ matrix.cdpg }}
            VECTORCHORD_TAG=${{ matrix.vectorchord }}

  results:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Build results
    needs: [build-and-push]
    steps:
      - run: |
          result="${{ needs.build-and-push.result }}"
          if [[ $result == "success" || $result == "skipped" ]]; then
            exit 0
          else
            exit 1
          fi
